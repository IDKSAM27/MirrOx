Phase 1: ADB Setup & Server Deployment
Push the Android server binary to the device

Use adb push to send the .jar or .apk or native binary (depending on implementation) to /data/local/tmp/.

Start the server via adb shell

Use a command like adb shell CLASSPATH=/data/local/tmp/server.jar app_process / com.example.Server or similar for native binaries.


Phase 2: Communication via ADB (USB)
Set up communication over ADB exec-out or forward

Use adb exec-out to get screen frames (or setup adb forward to connect to a local TCP socket from the server).

Handle the server's stdout/stderr for streaming video/audio data


Phase 3: Rust Client Integration
Read and decode data from ADB's stdout in Rust

Pipe incoming binary stream (e.g., H.264 or MJPEG) from adb into the SDL window.

Use ffmpeg, image, or sdl2 crates to decode and render


Phase 4: Input Handling
Capture mouse/keyboard events in the Rust client

Send input events using ADB shell commands

e.g., adb shell input tap x y, input keyevent, input swipe, etc.


Optional Enhancements

Add USB device detection.

Implement a performance mode toggle (e.g., frame skipping, resolution).

Compress frames for lower latency.

